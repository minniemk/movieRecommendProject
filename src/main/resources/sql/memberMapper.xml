<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
	<sql id="selectMember">
 		select member_Id,member_pwd,member_name,member_email from member
 	</sql>

	<update id="updateMember" parameterType="member">
		update member set member_pwd=#{memberPwd},member_name=#{memberName}
		where member_Email=#{memberEmail}
	</update> 

 	<select id="login" resultType="member" parameterType="member">
 		<include refid="selectMember"></include>
 		where member_email=#{memberEmail} and member_Pwd=#{memberPwd}
 	</select>
 	<select id="getMemberCount" resultType="int">
 		select count(*) from member
 	</select>
 	
 
	<insert id="registerMember" parameterType="member">
		insert into member(member_Id,member_pwd,member_name,member_email)
		values(member_id_seq.nextval,#{memberPwd},#{memberName},#{memberEmail})
	</insert>
 	<select id="idcheck" resultType="int">
		select count(*) from member where member_email=#{value}
	</select>
	
	<select id="findMemberById" resultType="member">
 		SELECT	member_id,	member_pwd,	member_name, member_email
		FROM	member
		WHERE 	member_email=#{value}				
 	</select>
 	
 	<select id="adminList" resultType="member">
 		select member_Id,member_pwd,member_name,member_email from member
 	</select>
 	
 	<select id="mypage" resultType="member">
 		select member_Id, member_name, member_email from member
 	</select>

 	<!-- 내가 별점 준 영화 보기 Join 사용-->
 	<resultMap type="movie" id="MovieRecommendAssociationJoin"> 	
 	       <id column="movie_No" property="movieNo"/>
	 		<result column="movie_name" property="movieName"/>
	 		<result column="movie_story" property="movieStory"/>
	 		<result column="movie_genre" property="movieGenre"/> 	
	 		<result column="movie_director" property="movieDirector"/> 	
	 		<result column="movie_poster" property="moviePoster"/> 	
	 		<result column="movie_actor" property="movieActor"/>	
 		<association property="recommendDTO" javaType="recommend">
	 		<id column="recommend_No" property="recommendNo"/>
 			<result column="member_Id" property="memberId"/>
 			<result column="movie_no" property="movieNo"/>
 			<result column="recommend_grade" property="recommendGrade"/>			
 		</association>
 	</resultMap> 	
 	<select id="myRecommendGrade" resultMap="MovieRecommendAssociationJoin" parameterType="long">
 	select m.movie_no,m.movie_actor, m.movie_name,m.movie_story,m.movie_Genre,r.recommend_No , r.member_id, r.movie_no , r.recommend_grade,
 	m.movie_poster, m.movie_director
 	from movie m join recommend r 
 	on m.movie_no = r.movie_no and member_id = #{value}
 	</select>
 	
 	<!-- 찜목록에 insert wishMap을 만들어서 movie_no와 member_id 두개 동시에 넣을 수 있게 한다.-->
	<insert id="insertWishList" parameterType="map">
 		insert into wishList(wish_no, movie_no, member_id) values(wish_no_seq.nextval, #{movieNo}, #{memberId})
 	</insert>
 	
 	<!-- 찜목록에 찜 중복 안되게 검사하기 -->
 	<select id="checkWishList" parameterType="map" resultType="wishList">
 		select wish_no, movie_no, member_id from wishList where member_id = #{memberId} and movie_no = #{movieNo}
 	</select>
 	

 	
 	
 	<!-- 회원이 찜한 찜목록 전체 출력 join기능 사용 -->
 	<resultMap type="movie" id="MovieWishListAssociationJoin"> 	
 	       <id column="movie_No" property="movieNo"/>
	 		<result column="movie_name" property="movieName"/>
	 		<result column="movie_story" property="movieStory"/>
	 		<result column="movie_genre" property="movieGenre"/> 	
	 		<result column="movie_director" property="movieDirector"/> 	
	 		<result column="movie_poster" property="moviePoster"/> 		
	 		<result column="movie_actor" property="movieActor"/>	
 		<association property="wishListDTO" javaType="wishList">
	 		<id column="wish_no" property="wishNo"/>
	 		<result column="movie_no" property="movieNo"/>
 			<result column="member_Id" property="memberId"/>
 		</association>
 	</resultMap> 	
 	<select id="myWishList" resultMap="MovieWishListAssociationJoin" parameterType="long">
 	select m.movie_no, m.movie_actor, m.movie_name,m.movie_story,m.movie_Genre,w.wish_no , w.member_id, w.movie_no,
 	m.movie_poster, m.movie_director
 	from movie m join wishList w
 	on m.movie_no = w.movie_no and member_id = #{value}
 	</select>
 	
 	<!-- 회원탈퇴 -->
 	<delete id="memberDelete" parameterType="member">
 		delete from member where member_email=#{memberEmail}
 	</delete>
 	
 	<!-- 회원 목록 -->
 	<select id="listAll" resultType="member">
	select member_Id,member_pwd,member_name,member_email from member
 	<include refid="search"></include>
 	</select>

	<select id="countMember" resultType="int">
		select count(*) from member
		<include refid="search"></include>
	</select> 	
	
	<sql id="search">
		<choose>
			<when test="searchOption == 'all'">
				where member_email like '%' || #{keyword} || '%'
				or member_name like '%' || #{keyword} || '%'
				or member_Id like '%' || #{keyword} || '%'
			</when>
			<otherwise>
				where ${searchOption} like '%' ||#{keyword} || '%'
			</otherwise> 
		</choose>
	</sql>
</mapper>